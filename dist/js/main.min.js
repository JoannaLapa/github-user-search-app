"use strict";!function(){var o=document.querySelector("#error-message"),e=document.querySelector("#error-message-box"),t=document.querySelector("body"),n=localStorage.getItem("theme"),r=("light"===n?t.classList.add("light"):t.classList.add("dark"),function(t){var e=document.querySelector("#name");return null!==t.name?e.textContent=t.name:e.textContent=t.login,e}),c=function(t){t=new Date(t.created_at).toLocaleDateString("en-GB",{year:"numeric",month:"short",day:"numeric"});return document.querySelector("#joined-date").textContent="Joined ".concat(t)},a=function(t){var e=document.querySelector("#bio");return null===t.bio?(e.textContent="This profile has no bio",e.classList.add("overview__bio--transparency")):(e.textContent=t.bio,e.classList.remove("overview__bio--transparency")),e},l=function(t){var e=document.querySelector("#location"),o=document.querySelector("#location-box");return null===t.location||0===t.location?(e.textContent="Not available",o.classList.add("contact__box--transparency")):(e.textContent=t.location,o.classList.remove("contact__box--transparency")),o},u=function(t){var e=document.querySelector("#company"),o=document.querySelector("#company-box");return(null===t.company||0===t.company.length?s:("@"==t.company.charAt(0)?(e.textContent="".concat(t.company),e.href="https://github.com/".concat(t.company.substring(1))):(e.textContent="".concat(t.company),e.href="https://github.com/".concat(t.company)),i))(e,o),o};function i(t,e){t.classList.remove("contact__details--text-decoration"),e.classList.remove("contact__box--transparency")}function s(t,e){t.textContent="Not available",t.classList.add("contact__details--text-decoration"),e.classList.add("contact__box--transparency")}function d(t){fetch("https://api.github.com/users/".concat(t)).then(function(t){if(console.log(t),t.ok)return t.json();throw new Error((t="No results",o.textContent=t,e.style.display="inline-block",e))}).then(function(t){return t=t,document.querySelector("#avatar").src=t.avatar_url,r(t),document.querySelector("#username").textContent="@".concat(t.login),c(t),a(t),document.querySelector("#repos").textContent=t.public_repos,document.querySelector("#followers").textContent=t.followers,document.querySelector("#following").textContent=t.following,l(t),u(t),m(t),void h(t)}).catch(function(t){return console.error(t)})}var m=function(t){var e=document.querySelector("#website"),o=document.querySelector("#website-box");return(null===t.blog||0===t.blog.length?(e.href="",s):(t.blog.includes("http")?(e.textContent=t.blog,e.href="".concat(t.blog)):!1===function(t){var e;try{e=new URL(t)}catch(t){return!1}return"http:"===e.protocol||"https:"===e.protocol}(e.href="http://".concat(t.blog))?(e.textContent=t.blog,e.href="https://".concat(t.blog)):(e.textContent=t.blog,e.href="http://".concat(t.blog)),i))(e,o),o},h=function(t){var e=document.querySelector("#twitter"),o=document.querySelector("#twitter-box");return(null===t.twitter_username||0===t.twitter_username.length?s:(e.textContent=t.twitter_username,e.href="http://twitter.com/".concat(t.twitter_username),i))(e,o),o};document.querySelector("#search-button").addEventListener("click",function(t){var e=document.querySelector("#search-input"),t=(t.preventDefault(),o.textContent="",e.value.split(" ").join(""));d(t),e.value=""}),document.querySelector("#screen-mode-button").addEventListener("click",function(){n="light"===n?(t.classList.remove("light"),t.classList.add("dark"),"dark"):(t.classList.remove("dark"),t.classList.add("light"),"light"),console.log(n),localStorage.setItem("theme",n)})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
