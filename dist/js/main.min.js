"use strict";var screenModebutton=document.querySelector("#screen-mode__button"),searchButton=document.querySelector("#search__button"),searchInput=document.querySelector("#search__input"),body=document.querySelector("body"),headerWrapper=document.querySelector("#header__wrapper"),searchErrorMessage=document.querySelector("#error-message"),theme=localStorage.getItem("theme")||"light",changeColorScreenMode=function(){theme=!0===window.matchMedia("(prefers-color-scheme: dark)").matches&&!0!==body.classList.contains("light")&&!0!==body.classList.contains("dark")?(body.classList.add("light"),"light"):body.classList.contains("light")?(body.classList.add("dark"),body.classList.remove("light"),"dark"):(body.classList.remove("dark"),body.classList.add("light"),"light"),console.log(theme),localStorage.setItem("theme",theme)},renderError=function(e){searchErrorMessage.textContent=e},getUserData=function(e){fetch("https://api.github.com/users/".concat(e)).then(function(e){if(console.log(e),e.ok)return e.json();throw new Error(renderError("No results"))}).then(function(e){return renderUser(e)}).catch(function(e){return console.error("No results")})},removeClassesFromElement=function(e,t){e.classList.remove("contact__details--text-decoration"),t.classList.remove("contact__box--transparency")},addClassesToElement=function(e,t){e.textContent="Not available",e.classList.add("contact__details--text-decoration"),t.classList.add("contact__box--transparency")},renderUser=function(e){var t=new Date(e.created_at).toLocaleDateString("en-GB",{year:"numeric",month:"short",day:"numeric"}),t=(document.querySelector("#avatar").src=e.avatar_url,o=document.querySelector("#name"),null!==e.name?o.textContent=e.name:o.textContent=e.login,document.querySelector("#username").textContent="@".concat(e.login),document.querySelector("#joined-date").textContent="Joined ".concat(t),o=document.querySelector("#bio"),null===e.bio?(o.textContent="This profile has no bio",o.classList.add("overview__bio--transparency")):(o.textContent=e.bio,o.classList.remove("overview__bio--transparency")),document.querySelector("#repos").textContent=e.public_repos,document.querySelector("#followers").textContent=e.followers,document.querySelector("#following").textContent=e.following,t=document.querySelector("#location"),o=document.querySelector("#location-box"),null===e.location||0===e.location?(t.textContent="Not available",o.classList.add("contact__box--transparency")):(t.textContent=e.location,o.classList.remove("contact__box--transparency")),t=document.querySelector("#company"),o=document.querySelector("#company-box"),null===e.company||0===e.company.length?addClassesToElement(t,o):("@"==e.company.charAt(0)?(t.textContent="".concat(e.company),t.href="https://github.com/".concat(e.company.substring(1))):(t.textContent="".concat(e.company),t.href="https://github.com/".concat(e.company)),removeClassesFromElement(t,o)),t=document.querySelector("#website"),o=document.querySelector("#website-box"),null===e.blog||0===e.blog.length?(t.href="",addClassesToElement(t,o)):(e.blog.includes("http")?(t.textContent=e.blog,t.href="".concat(e.blog)):!1===function(e){var t;try{t=new URL(e)}catch(e){return!1}return"http:"===t.protocol||"https:"===t.protocol}(t.href="http://".concat(e.blog))?(t.textContent=e.blog,t.href="https://".concat(e.blog)):(t.textContent=e.blog,t.href="http://".concat(e.blog)),removeClassesFromElement(t,o)),document.querySelector("#twitter")),o=document.querySelector("#twitter-box");null===e.twitter_username||0===e.twitter_username.length?addClassesToElement(t,o):(t.textContent=e.twitter_username,t.href="http://twitter.com/".concat(e.twitter_username),removeClassesFromElement(t,o))};searchButton.addEventListener("click",function(e){e.preventDefault(),searchErrorMessage.textContent="";e=searchInput.value.split(" ").join("");getUserData(e),searchInput.value=""}),screenModebutton.addEventListener("click",function(){changeColorScreenMode()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
