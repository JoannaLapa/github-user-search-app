"use strict";var searchErrorMessage=document.querySelector("#error-message"),searchErrorMessageBox=document.querySelector("#error-message-box"),changeColorScreenMode=function(){var e=document.querySelector("body");!0===window.matchMedia("(prefers-color-scheme: light)").matches?e.classList.toggle("dark"):e.classList.toggle("light")},renderError=function(e){return searchErrorMessage.textContent=e,searchErrorMessageBox.style.display="inline-block",searchErrorMessageBox},checkiIfHasName=function(e){var t=document.querySelector("#name");return null!==e.name?t.textContent=e.name:t.textContent=e.login,t},setCorrectJoinedDate=function(e){e=new Date(e.created_at).toLocaleDateString("en-GB",{year:"numeric",month:"short",day:"numeric"});return document.querySelector("#joined-date").textContent="Joined ".concat(e)},checkIfHasBio=function(e){var t=document.querySelector("#bio");return null===e.bio?(t.textContent="This profile has no bio",t.classList.add("overview__bio--transparency")):(t.textContent=e.bio,t.classList.remove("overview__bio--transparency")),t},checkIfHasNoLocation=function(e){var t=document.querySelector("#location"),o=document.querySelector("#location-box");return null===e.location||0===e.location?(t.textContent="Not available",o.classList.add("contact__box--transparency")):(t.textContent=e.location,o.classList.remove("contact__box--transparency")),o},checkIfHasNoCompanyDetails=function(e){var t=document.querySelector("#company"),o=document.querySelector("#company-box");return(null===e.company||0===e.company.length?addClassesToElement:("@"==e.company.charAt(0)?(t.textContent="".concat(e.company),t.href="https://github.com/".concat(e.company.substring(1))):(t.textContent="".concat(e.company),t.href="https://github.com/".concat(e.company)),removeClassesFromElement))(t,o),o};function isValidHttpUrl(e){var t;try{t=new URL(e)}catch(e){return!1}return"http:"===t.protocol||"https:"===t.protocol}var checkIfHasNoWebsite=function(e){var t=document.querySelector("#website"),o=document.querySelector("#website-box");return(null===e.blog||0===e.blog.length?(t.href="",addClassesToElement):(e.blog.includes("http")?(t.textContent=e.blog,t.href="".concat(e.blog)):!1===isValidHttpUrl(t.href="http://".concat(e.blog))?(t.textContent=e.blog,t.href="https://".concat(e.blog)):(t.textContent=e.blog,t.href="http://".concat(e.blog)),removeClassesFromElement))(t,o),o},checkIfHasTwitter=function(e){var t=document.querySelector("#twitter"),o=document.querySelector("#twitter-box");return(null===e.twitter_username||0===e.twitter_username.length?addClassesToElement:(t.textContent=e.twitter_username,t.href="http://twitter.com/".concat(e.twitter_username),removeClassesFromElement))(t,o),o},getUserData=function(e){fetch("https://api.github.com/users/".concat(e)).then(function(e){if(console.log(e),e.ok)return e.json();throw new Error(renderError("No results"))}).then(function(e){return renderUser(e)}).catch(function(e){return console.error(e)})},removeClassesFromElement=function(e,t){e.classList.remove("contact__details--text-decoration"),t.classList.remove("contact__box--transparency")},addClassesToElement=function(e,t){e.textContent="Not available",e.classList.add("contact__details--text-decoration"),t.classList.add("contact__box--transparency")},renderUser=function(e){document.querySelector("#avatar").src=e.avatar_url,checkiIfHasName(e),document.querySelector("#username").textContent="@".concat(e.login),setCorrectJoinedDate(e),checkIfHasBio(e),document.querySelector("#repos").textContent=e.public_repos,document.querySelector("#followers").textContent=e.followers,document.querySelector("#following").textContent=e.following,checkIfHasNoLocation(e),checkIfHasNoCompanyDetails(e),checkIfHasNoWebsite(e),checkIfHasTwitter(e)};document.querySelector("#search-button").addEventListener("click",function(e){var t=document.querySelector("#search-input"),e=(e.preventDefault(),searchErrorMessage.textContent="",t.value.split(" ").join(""));getUserData(e),t.value=""}),document.querySelector("#screen-mode-button").addEventListener("click",function(){changeColorScreenMode()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsic2VhcmNoRXJyb3JNZXNzYWdlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic2VhcmNoRXJyb3JNZXNzYWdlQm94IiwiY2hhbmdlQ29sb3JTY3JlZW5Nb2RlIiwiYm9keSIsIndpbmRvdyIsImNsYXNzTGlzdCIsInRvZ2dsZSIsIm1hdGNoZXMiLCJtc2ciLCJkaXNwbGF5IiwibmFtZSIsImRhdGEiLCJ0ZXh0Q29udGVudCIsImxvZ2luIiwib3B0aW9ucyIsIm1vbnRoIiwiRGF0ZSIsImNyZWF0ZWRfYXQiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJ5ZWFyIiwiZGF5IiwiY29uY2F0IiwiY29ycmVjdERhdGVGb3JtYXQiLCJjaGVja0lmSGFzQmlvIiwiYmlvIiwiY2hlY2tJZkhhc05vTG9jYXRpb24iLCJsb2NhdGlvbiIsImxvY2F0aW9uQm94IiwiY2hlY2tJZkhhc05vQ29tcGFueURldGFpbHMiLCJjb21wYW55IiwiY29tcGFueUJveCIsImFkZENsYXNzZXNUb0VsZW1lbnQiLCJzdWJzdHJpbmciLCJyZW1vdmVDbGFzc2VzRnJvbUVsZW1lbnQiLCJpc1ZhbGlkSHR0cFVybCIsInN0cmluZyIsInVybCIsIlVSTCIsIl8iLCJwcm90b2NvbCIsImNoZWNrSWZIYXNOb1dlYnNpdGUiLCJ3ZWJzaXRlIiwiYmxvZyIsImxlbmd0aCIsImluY2x1ZGVzIiwiaHJlZiIsIndlYnNpdGVCb3giLCJjaGVja0lmSGFzVHdpdHRlciIsInR3aXR0ZXIiLCJ0d2l0dGVyQm94IiwidHdpdHRlcl91c2VybmFtZSIsImdldFVzZXJEYXRhIiwiZmV0Y2giLCJ1c2VyTmFtZSIsInRoZW4iLCJjb25zb2xlIiwicmVzcG9uc2UiLCJyZW5kZXJVc2VyIiwianNvbiIsIkVycm9yIiwicmVuZGVyRXJyb3IiLCJlcnIiLCJlcnJvciIsImVsZW1lbnQiLCJyZW1vdmUiLCJlbGVtZW50Qm94IiwiYWRkIiwic3JjIiwiYXZhdGFyX3VybCIsImNoZWNraUlmSGFzTmFtZSIsInNldENvcnJlY3RKb2luZWREYXRlIiwicHVibGljX3JlcG9zIiwiZm9sbG93ZXJzIiwiZm9sbG93aW5nIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJzZWFyY2hJbnB1dCIsInByZXZlbnREZWZhdWx0IiwidmFsdWUiLCJzcGxpdCIsImpvaW4iXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsSUFBTUEsbUJBQXFCQyxTQUFTQyxjQUFjLGdCQUFpQixFQUM3REMsc0JBQXdCRixTQUFTQyxjQUFjLG9CQUFxQixFQUdwRUUsc0JBQXdCLFdBQzdCLElBQU1DLEVBQU9KLFNBQVNDLGNBQWMsTUFBTyxFQUdiLENBQUEsSUFEN0JJLE9BQ0tDLFdBQVVDLCtCQUFjLEVBQUFDLFFBQzlCSixFQUFDRSxVQUFNQyxPQUFBLE1BQUEsRUFFUEgsRUFBQUUsVUFBQUMsT0FBQSxPQUFBLENBQ0QsRUFJQ1IsWUFBa0IsU0FBQVUsR0FHbEIsT0FIQVYsbUJBQ0FHLFlBQTRCUSxFQUE1QlIsc0JBQ09ILE1BQW9CRyxRQUFBQSxlQUMzQkEscUJBQUQsRUFJT1MsZ0JBQWdCVixTQUFBQSxHQUF0QixJQUNJVyxFQUFLRCxTQUFTVixjQUFNLE9BQUEsRUFNeEIsT0FMTVksT0FBTEYsRUFBS0UsS0FDTkYsRUFBQ0UsWUFBTUQsRUFBQUQsS0FFUEEsRUFBQUUsWUFBQUQsRUFBQUUsTUFFQUgsQ0FBRCxFQUlPSSxxQkFBVSxTQUFBSCxHQUFtQkksRUFBYyxJQUFBQyxLQUFBTCxFQUFBTSxVQUFBLEVBQUFDLG1CQUFBLFFBQXpCLENBQVNDLEtBQUEsVUFBQUosTUFBQSxRQUFBSyxJQUFBLFNBQUEsQ0FBZ0IsRUFHakQsT0FId0RyQixTQUFBQyxjQUFBLGNBQUEsRUFBQVksWUFBQSxVQUFBUyxPQUFBQyxDQUFBLENBSXpELEVBQUNDLGNBQUEsU0FBQVosR0FJQSxJQUFNYSxFQUFNekIsU0FBU0MsY0FBYyxNQUFNLEVBUXpDLE9BVkQsT0FBQVcsRUFBQWEsS0FDQUEsRUFBTUQsWUFBZ0IsMEJBQ3JCQyxFQUFNQSxVQUFNekIs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ckRxRCxHQUZOc0IsRUFBQ0UsZUFBQ0EsRUFDRi9FLG1CQUFrQmMsWUFBWSxHQUNiZ0UsRUFBWUUsTUFBTUMsTUFBTSxHQUFJLEVBQUNDLEtBQUssRUFBRyxHQUN0RDdCLFlBQVdFLENBQUNBLEVBQ1p1QixFQUFXRSxNQUFNLEVBQ2xCLENBQUMsRUFFRC9FLFNBQ0NHLGNBQXFCLHFCQUFFLEVBQUF3RSxpQkFBQSxRQUFBLFdBQ3ZCeEUsc0JBQUMsQ0FBRixDQUFDIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXHJcblxyXG5jb25zdCBzZWFyY2hFcnJvck1lc3NhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZXJyb3ItbWVzc2FnZScpXHJcbmNvbnN0IHNlYXJjaEVycm9yTWVzc2FnZUJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlcnJvci1tZXNzYWdlLWJveCcpXHJcblxyXG4vL0NIQU5HSU5HIENPTE9SIFNDUkVFTiBNT0RFXHJcbmNvbnN0IGNoYW5nZUNvbG9yU2NyZWVuTW9kZSA9ICgpID0+IHtcclxuXHRjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpXHJcblx0aWYgKFxyXG5cdFx0d2luZG93Lm1hdGNoTWVkaWEoJyhwcmVmZXJzLWNvbG9yLXNjaGVtZTogbGlnaHQpJykubWF0Y2hlcyA9PT0gdHJ1ZSkge1xyXG5cdFx0Ym9keS5jbGFzc0xpc3QudG9nZ2xlKCdkYXJrJylcclxuXHR9IGVsc2Uge1xyXG5cdFx0Ym9keS5jbGFzc0xpc3QudG9nZ2xlKCdsaWdodCcpXHJcblx0fVxyXG59XHJcblxyXG4vL1BSSU5USU5HIEVSUk9SIE1FU1NBR0VcclxuY29uc3QgcmVuZGVyRXJyb3IgPSBtc2cgPT4ge1xyXG5cdHNlYXJjaEVycm9yTWVzc2FnZS50ZXh0Q29udGVudCA9IG1zZ1xyXG5cdHNlYXJjaEVycm9yTWVzc2FnZUJveC5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jaydcclxuXHRyZXR1cm4gc2VhcmNoRXJyb3JNZXNzYWdlLCBzZWFyY2hFcnJvck1lc3NhZ2VCb3hcclxufVxyXG5cclxuLy9DSEVDS0lORyBJRiBUSEUgVVNFUiBTRVQgVEhFIE5BTUVcclxuY29uc3QgY2hlY2tpSWZIYXNOYW1lID0gZGF0YSA9PiB7XHJcblx0Y29uc3QgbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYW1lJylcclxuXHRpZiAoZGF0YS5uYW1lICE9PSBudWxsKSB7XHJcblx0XHRuYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lXHJcblx0fSBlbHNlIHtcclxuXHRcdG5hbWUudGV4dENvbnRlbnQgPSBkYXRhLmxvZ2luXHJcblx0fVxyXG5cdHJldHVybiBuYW1lXHJcbn1cclxuXHJcbi8vU0VUVElORyBUSEUgQ09SUkVDVCBEQVRFJ1MgRk9STUFUXHJcbmNvbnN0IHNldENvcnJlY3RKb2luZWREYXRlID0gZGF0YSA9PiB7XHJcblx0Y29uc3Qgb3B0aW9ucyA9IHsgeWVhcjogJ251bWVyaWMnLCBtb250aDogJ3Nob3J0JywgZGF5OiAnbnVtZXJpYycgfVxyXG5cdGNvbnN0IGNvcnJlY3REYXRlRm9ybWF0ID0gbmV3IERhdGUoZGF0YS5jcmVhdGVkX2F0KS50b0xvY2FsZURhdGVTdHJpbmcoJ2VuLUdCJywgb3B0aW9ucylcclxuXHRjb25zdCBqb2luZWREYXRlID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNqb2luZWQtZGF0ZScpLnRleHRDb250ZW50ID0gYEpvaW5lZCAke2NvcnJlY3REYXRlRm9ybWF0fWApXHJcblx0cmV0dXJuIGpvaW5lZERhdGVcclxufVxyXG5cclxuLy9DSEVDS0lORyBJUyBUSEUgVVNFUiBTRVQgVEhFIEJJT1xyXG5jb25zdCBjaGVja0lmSGFzQmlvID0gZGF0YSA9PiB7XHJcblx0Y29uc3QgYmlvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2JpbycpXHJcblx0aWYgKGRhdGEuYmlvID09PSBudWxsKSB7XHJcblx0XHRiaW8udGV4dENvbnRlbnQgPSAnVGhpcyBwcm9maWxlIGhhcyBubyBiaW8nXHJcblx0XHRiaW8uY2xhc3NMaXN0LmFkZCgnb3ZlcnZpZXdfX2Jpby0tdHJhbnNwYXJlbmN5JylcclxuXHR9IGVsc2Uge1xyXG5cdFx0YmlvLnRleHRDb250ZW50ID0gZGF0YS5iaW9cclxuXHRcdGJpby5jbGFzc0xpc3QucmVtb3ZlKCdvdmVydmlld19fYmlvLS10cmFuc3BhcmVuY3knKVxyXG5cdH1cclxuXHRyZXR1cm4gYmlvXHJcbn1cclxuXHJcbi8vQ0hFQ0tJTkcgSUYgVEhFIFVTRVIgU0VUIExPQ0FUSU9OXHJcbmNvbnN0IGNoZWNrSWZIYXNOb0xvY2F0aW9uID0gZGF0YSA9PiB7XHJcblx0Y29uc3QgbG9jYXRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbG9jYXRpb24nKVxyXG5cdGNvbnN0IGxvY2F0aW9uQm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2xvY2F0aW9uLWJveCcpXHJcblx0aWYgKGRhdGEubG9jYXRpb24gPT09IG51bGwgfHwgZGF0YS5sb2NhdGlvbiA9PT0gMCkge1xyXG5cdFx0bG9jYXRpb24udGV4dENvbnRlbnQgPSAnTm90IGF2YWlsYWJsZSdcclxuXHRcdGxvY2F0aW9uQm94LmNsYXNzTGlzdC5hZGQoJ2NvbnRhY3RfX2JveC0tdHJhbnNwYXJlbmN5JylcclxuXHR9IGVsc2Uge1xyXG5cdFx0bG9jYXRpb24udGV4dENvbnRlbnQgPSBkYXRhLmxvY2F0aW9uXHJcblx0XHRsb2NhdGlvbkJveC5jbGFzc0xpc3QucmVtb3ZlKCdjb250YWN0X19ib3gtLXRyYW5zcGFyZW5jeScpXHJcblx0fVxyXG5cdHJldHVybiBsb2NhdGlvbiwgbG9jYXRpb25Cb3hcclxufVxyXG5cclxuLy8gQ0hFQ0tJTkcgSUYgVEhFIFVTRVIgU0VUIENPTVBBTlkgREVUQUlMU1xyXG5jb25zdCBjaGVja0lmSGFzTm9Db21wYW55RGV0YWlscyA9IGRhdGEgPT4ge1xyXG5cdGNvbnN0IGNvbXBhbnkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29tcGFueScpXHJcblx0Y29uc3QgY29tcGFueUJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb21wYW55LWJveCcpXHJcblx0aWYgKGRhdGEuY29tcGFueSA9PT0gbnVsbCB8fCBkYXRhLmNvbXBhbnkubGVuZ3RoID09PSAwKSB7XHJcblx0XHRhZGRDbGFzc2VzVG9FbGVtZW50KGNvbXBhbnksIGNvbXBhbnlCb3gpXHJcblx0fSBlbHNlIGlmIChkYXRhLmNvbXBhbnkuY2hhckF0KDApID09ICdAJykge1xyXG5cdFx0Y29tcGFueS50ZXh0Q29udGVudCA9IGAke2RhdGEuY29tcGFueX1gXHJcblx0XHRjb21wYW55LmhyZWYgPSBgaHR0cHM6Ly9naXRodWIuY29tLyR7ZGF0YS5jb21wYW55LnN1YnN0cmluZygxKX1gXHJcblx0XHRyZW1vdmVDbGFzc2VzRnJvbUVsZW1lbnQoY29tcGFueSwgY29tcGFueUJveClcclxuXHR9IGVsc2Uge1xyXG5cdFx0Y29tcGFueS50ZXh0Q29udGVudCA9IGAke2RhdGEuY29tcGFueX1gXHJcblx0XHRjb21wYW55LmhyZWYgPSBgaHR0cHM6Ly9naXRodWIuY29tLyR7ZGF0YS5jb21wYW55fWBcclxuXHRcdHJlbW92ZUNsYXNzZXNGcm9tRWxlbWVudChjb21wYW55LCBjb21wYW55Qm94KVxyXG5cdH1cclxuXHRyZXR1cm4gY29tcGFueSwgY29tcGFueUJveFxyXG59XHJcblxyXG4vL0NIRUNLSU5HIElGIFRIRSBVUkwgSFRUUCBJUyBWQUxJRFxyXG5mdW5jdGlvbiBpc1ZhbGlkSHR0cFVybChzdHJpbmcpIHtcclxuXHRsZXQgdXJsXHJcblxyXG5cdHRyeSB7XHJcblx0XHR1cmwgPSBuZXcgVVJMKHN0cmluZylcclxuXHR9IGNhdGNoIChfKSB7XHJcblx0XHRyZXR1cm4gZmFsc2VcclxuXHR9XHJcblxyXG5cdHJldHVybiB1cmwucHJvdG9jb2wgPT09ICdodHRwOicgfHwgdXJsLnByb3RvY29sID09PSAnaHR0cHM6J1xyXG59XHJcblxyXG4vLyBDSEVDS0lORyBJRiBUSEUgVVNFUiBTRVQgV0VCU0lURSBBRERSRVNTXHJcbmNvbnN0IGNoZWNrSWZIYXNOb1dlYnNpdGUgPSBkYXRhID0+IHtcclxuXHRjb25zdCB3ZWJzaXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3dlYnNpdGUnKVxyXG5cdGNvbnN0IHdlYnNpdGVCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjd2Vic2l0ZS1ib3gnKVxyXG5cclxuXHRpZiAoZGF0YS5ibG9nID09PSBudWxsIHx8IGRhdGEuYmxvZy5sZW5ndGggPT09IDApIHtcclxuXHRcdHdlYnNpdGUuaHJlZiA9ICcnXHJcblx0XHRhZGRDbGFzc2VzVG9FbGVtZW50KHdlYnNpdGUsIHdlYnNpdGVCb3gpXHJcblx0fSBlbHNlIGlmICghZGF0YS5ibG9nLmluY2x1ZGVzKCdodHRwJykpIHtcclxuXHRcdGlmIChpc1ZhbGlkSHR0cFVybCgod2Vic2l0ZS5ocmVmID0gYGh0dHA6Ly8ke2RhdGEuYmxvZ31gKSkgPT09IGZhbHNlKSB7XHJcblx0XHRcdHdlYnNpdGUudGV4dENvbnRlbnQgPSBkYXRhLmJsb2dcclxuXHRcdFx0d2Vic2l0ZS5ocmVmID0gYGh0dHBzOi8vJHtkYXRhLmJsb2d9YFxyXG5cdFx0XHRyZW1vdmVDbGFzc2VzRnJvbUVsZW1lbnQod2Vic2l0ZSwgd2Vic2l0ZUJveClcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHdlYnNpdGUudGV4dENvbnRlbnQgPSBkYXRhLmJsb2dcclxuXHRcdFx0d2Vic2l0ZS5ocmVmID0gYGh0dHA6Ly8ke2RhdGEuYmxvZ31gXHJcblx0XHRcdHJlbW92ZUNsYXNzZXNGcm9tRWxlbWVudCh3ZWJzaXRlLCB3ZWJzaXRlQm94KVxyXG5cdFx0fVxyXG5cdH0gZWxzZSB7XHJcblx0XHR3ZWJzaXRlLnRleHRDb250ZW50ID0gZGF0YS5ibG9nXHJcblx0XHR3ZWJzaXRlLmhyZWYgPSBgJHtkYXRhLmJsb2d9YFxyXG5cdFx0cmVtb3ZlQ2xhc3Nlc0Zyb21FbGVtZW50KHdlYnNpdGUsIHdlYnNpdGVCb3gpXHJcblx0fVxyXG5cdHJldHVybiB3ZWJzaXRlLCB3ZWJzaXRlQm94XHJcbn1cclxuXHJcbi8vQ0hFQ0tJTkcgSUYgVEhFIFVTRVIgU0VUIFRXSVRURVIgREVUQUlMU1xyXG5jb25zdCBjaGVja0lmSGFzVHdpdHRlciA9IGRhdGEgPT4ge1xyXG5cdGNvbnN0IHR3aXR0ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdHdpdHRlcicpXHJcblx0Y29uc3QgdHdpdHRlckJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0d2l0dGVyLWJveCcpXHJcblx0aWYgKGRhdGEudHdpdHRlcl91c2VybmFtZSA9PT0gbnVsbCB8fCBkYXRhLnR3aXR0ZXJfdXNlcm5hbWUubGVuZ3RoID09PSAwKSB7XHJcblx0XHRhZGRDbGFzc2VzVG9FbGVtZW50KHR3aXR0ZXIsIHR3aXR0ZXJCb3gpXHJcblx0fSBlbHNlIHtcclxuXHRcdHR3aXR0ZXIudGV4dENvbnRlbnQgPSBkYXRhLnR3aXR0ZXJfdXNlcm5hbWVcclxuXHRcdHR3aXR0ZXIuaHJlZiA9IGBodHRwOi8vdHdpdHRlci5jb20vJHtkYXRhLnR3aXR0ZXJfdXNlcm5hbWV9YFxyXG5cdFx0cmVtb3ZlQ2xhc3Nlc0Zyb21FbGVtZW50KHR3aXR0ZXIsIHR3aXR0ZXJCb3gpXHJcblx0fVxyXG5cdHJldHVybiB0d2l0dGVyLCB0d2l0dGVyQm94XHJcbn1cclxuXHJcbi8vR0VUVElORyBVU0VSIERBVEEgRlJPTSBBUElcclxuY29uc3QgZ2V0VXNlckRhdGEgPSBmdW5jdGlvbiAodXNlck5hbWUpIHtcclxuXHRmZXRjaChgaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2Vycy8ke3VzZXJOYW1lfWApXHJcblx0XHQudGhlbihyZXNwb25zZSA9PiB7XHJcblx0XHRcdGNvbnNvbGUubG9nKHJlc3BvbnNlKVxyXG5cdFx0XHRpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IocmVuZGVyRXJyb3IoJ05vIHJlc3VsdHMnKSlcclxuXHJcblx0XHRcdHJldHVybiByZXNwb25zZS5qc29uKClcclxuXHRcdH0pXHJcblx0XHQudGhlbihkYXRhID0+IHJlbmRlclVzZXIoZGF0YSkpXHJcblx0XHQuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcclxufVxyXG5cclxuLy9SRU1PVklORyBVTkRFUkxJTkUgQU5EIFRSQU5TUEFSRU5DWSBPTiBUSEUgRUxFTUVOVFxyXG5jb25zdCByZW1vdmVDbGFzc2VzRnJvbUVsZW1lbnQgPSAoZWxlbWVudCwgZWxlbWVudEJveCkgPT4ge1xyXG5cdGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnY29udGFjdF9fZGV0YWlscy0tdGV4dC1kZWNvcmF0aW9uJylcclxuXHRlbGVtZW50Qm94LmNsYXNzTGlzdC5yZW1vdmUoJ2NvbnRhY3RfX2JveC0tdHJhbnNwYXJlbmN5JylcclxufVxyXG5cclxuLy9BRERJTkcgIFVOREVSTElORSBBTkQgVFJBTlNQQVJFTkNZIE9OIFRIRSBFTEVNRU5UXHJcbmNvbnN0IGFkZENsYXNzZXNUb0VsZW1lbnQgPSAoZWxlbWVudCwgZWxlbWVudEJveCkgPT4ge1xyXG5cdGVsZW1lbnQudGV4dENvbnRlbnQgPSAnTm90IGF2YWlsYWJsZSdcclxuXHRlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2NvbnRhY3RfX2RldGFpbHMtLXRleHQtZGVjb3JhdGlvbicpXHJcblx0ZWxlbWVudEJveC5jbGFzc0xpc3QuYWRkKCdjb250YWN0X19ib3gtLXRyYW5zcGFyZW5jeScpXHJcbn1cclxuXHJcbi8vU0VUVElORyBUSEUgVVNFUiBEQVRBIEZST00gQVBJXHJcbmNvbnN0IHJlbmRlclVzZXIgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG5cdGNvbnN0IGF2YXRhciA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXZhdGFyJykuc3JjID0gZGF0YS5hdmF0YXJfdXJsKVxyXG5cdGNvbnN0IG5hbWUgPSBjaGVja2lJZkhhc05hbWUoZGF0YSlcclxuXHRjb25zdCBsb2dpbiA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdXNlcm5hbWUnKS50ZXh0Q29udGVudCA9IGBAJHtkYXRhLmxvZ2lufWApXHJcblx0Y29uc3Qgam9pbmVkRGF0ZSA9IHNldENvcnJlY3RKb2luZWREYXRlKGRhdGEpXHJcblx0Y29uc3QgYmlvID0gY2hlY2tJZkhhc0JpbyhkYXRhKVxyXG5cdGNvbnN0IHJlcG9zID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyZXBvcycpLnRleHRDb250ZW50ID0gZGF0YS5wdWJsaWNfcmVwb3MpXHJcblx0Y29uc3QgZm9sbG93ZXJzID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb2xsb3dlcnMnKS50ZXh0Q29udGVudCA9IGRhdGEuZm9sbG93ZXJzKVxyXG5cdGNvbnN0IGZvbGxvd2luZyA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9sbG93aW5nJykudGV4dENvbnRlbnQgPSBkYXRhLmZvbGxvd2luZylcclxuXHRjb25zdCBsb2NhdGlvbiA9IGNoZWNrSWZIYXNOb0xvY2F0aW9uKGRhdGEpXHJcblx0Y29uc3QgY29tcGFueSA9IGNoZWNrSWZIYXNOb0NvbXBhbnlEZXRhaWxzKGRhdGEpXHJcblx0Y29uc3Qgd2Vic2l0ZSA9IGNoZWNrSWZIYXNOb1dlYnNpdGUoZGF0YSlcclxuXHRjb25zdCB0d2l0dGVyID0gY2hlY2tJZkhhc1R3aXR0ZXIoZGF0YSlcclxufVxyXG5cclxuLy9BRERFVkVOVExJU1RFTkVSU1xyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2VhcmNoLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcblx0Y29uc3Qgc2VhcmNoSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2VhcmNoLWlucHV0JylcclxuXHRlLnByZXZlbnREZWZhdWx0KClcclxuXHRzZWFyY2hFcnJvck1lc3NhZ2UudGV4dENvbnRlbnQgPSAnJ1xyXG5cdGNvbnN0IHVzZXJOYW1lID0gc2VhcmNoSW5wdXQudmFsdWUuc3BsaXQoJyAnKS5qb2luKCcnKVxyXG5cdGdldFVzZXJEYXRhKHVzZXJOYW1lKVxyXG5cdHNlYXJjaElucHV0LnZhbHVlID0gJydcclxufSlcclxuXHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzY3JlZW4tbW9kZS1idXR0b24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuXHRjaGFuZ2VDb2xvclNjcmVlbk1vZGUoKVxyXG59KVxyXG4iXX0=
