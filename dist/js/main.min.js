"use strict";var screenModebutton=document.querySelector("#screen-mode__button"),searchButton=document.querySelector("#search__button"),searchInput=document.querySelector("#search__input"),body=document.querySelector("body"),headerWrapper=document.querySelector("#header__wrapper"),searchErrorMessage=document.querySelector("#error-message"),theme=localStorage.getItem("theme")||"light",changeColorScreenMode=function(){theme=!0===window.matchMedia("(prefers-color-scheme: dark)").matches&&!0!==body.classList.contains("light")&&!0!==body.classList.contains("dark")?(body.classList.add("light"),"light"):body.classList.contains("light")?(body.classList.add("dark"),body.classList.remove("light"),"dark"):(body.classList.remove("dark"),body.classList.add("light"),"light"),console.log(theme),localStorage.setItem("theme",theme)},renderError=function(e){searchErrorMessage.textContent=e},getUserData=function(e){fetch("https://api.github.com/users/".concat(e)).then(function(e){if(console.log(e),e.ok)return e.json();throw new Error(renderError("No results"))}).then(function(e){return renderUser(e)}).catch(function(e){return console.error("No results")})},removeClassesFromElement=function(e,t){e.classList.remove("contact__details--text-decoration"),t.classList.remove("contact__box--transparency")},addClassesToElement=function(e,t){e.textContent="Not available",e.classList.add("contact__details--text-decoration"),t.classList.add("contact__box--transparency")},renderUser=function(e){var t,o=new Date(e.created_at).toLocaleDateString("en-GB",{year:"numeric",month:"short",day:"numeric"});document.querySelector("#avatar").src=e.avatar_url,t=document.querySelector("#name"),null!==e.name?t.textContent=e.name:t.textContent=e.login,document.querySelector("#username").textContent="@".concat(e.login),document.querySelector("#joined-date").textContent="Joined ".concat(o),t=document.querySelector("#bio"),null===e.bio?(t.textContent="This profile has no bio",t.classList.add("overview__bio--transparency")):(t.textContent=e.bio,t.classList.remove("overview__bio--transparency")),document.querySelector("#repos").textContent=e.public_repos,document.querySelector("#followers").textContent=e.followers,document.querySelector("#following").textContent=e.following;o=document.querySelector("#location"),t=document.querySelector("#location-box"),null===e.location||0===e.location?(o.textContent="Not available",t.classList.add("contact__box--transparency")):(o.textContent=e.location,t.classList.remove("contact__box--transparency")),o=document.querySelector("#company"),t=document.querySelector("#company-box"),null===e.company||0===e.company.length?addClassesToElement(o,t):("@"==e.company.charAt(0)?(o.textContent="".concat(e.company),o.href="https://github.com/".concat(e.company.substring(1))):(o.textContent="".concat(e.company),o.href="https://github.com/".concat(e.company)),removeClassesFromElement(o,t)),o=document.querySelector("#website"),t=document.querySelector("#website-box"),null===e.blog||0===e.blog.length?(o.href="",addClassesToElement(o,t)):(e.blog.includes("http")?(o.textContent=e.blog,o.href="".concat(e.blog)):!1===function(e){var t;try{t=new URL(e)}catch(e){return!1}return"http:"===t.protocol||"https:"===t.protocol}(o.href="http://".concat(e.blog))?(o.textContent=e.blog,o.href="https://".concat(e.blog)):(o.textContent=e.blog,o.href="http://".concat(e.blog)),removeClassesFromElement(o,t)),o=document.querySelector("#twitter"),t=document.querySelector("#twitter-box"),null===e.twitter_username||0===e.twitter_username.length?addClassesToElement(o,t):(o.textContent=e.twitter_username,o.href="http://twitter.com/".concat(e.twitter_username),removeClassesFromElement(o,t))};searchButton.addEventListener("click",function(e){e.preventDefault(),searchErrorMessage.textContent="";e=searchInput.value.split(" ").join("");getUserData(e),searchInput.value=""}),screenModebutton.addEventListener("click",function(){changeColorScreenMode()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
