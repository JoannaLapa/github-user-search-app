"use strict";var searchErrorMessage=document.querySelector("#error-message"),searchErrorMessageBox=document.querySelector("#error-message-box"),changeColorScreenMode=function(){var e=document.querySelector("body");!0===window.matchMedia("(prefers-color-scheme: light)").matches?e.classList.toggle("dark"):e.classList.toggle("light")},renderError=function(e){return searchErrorMessage.textContent=e,searchErrorMessageBox.style.display="inline-block",searchErrorMessageBox},checkiIfHasName=function(e){var t=document.querySelector("#name");return null!==e.name?t.textContent=e.name:t.textContent=e.login,t},setCorrecJoinedDate=function(e){e=new Date(e.created_at).toLocaleDateString("en-GB",{year:"numeric",month:"short",day:"numeric"});return document.querySelector("#joined-date").textContent="Joined ".concat(e)},checkIfHasBio=function(e){var t=document.querySelector("#bio");return null===e.bio?(t.textContent="This profile has no bio",t.classList.add("overview__bio--transparency")):(t.textContent=e.bio,t.classList.remove("overview__bio--transparency")),t},checkIfHasNoLocation=function(e){var t=document.querySelector("#location"),o=document.querySelector("#location-box");return null===e.location||0===e.location?(t.textContent="Not available",o.classList.add("contact__box--transparency")):(t.textContent=e.location,o.classList.remove("contact__box--transparency")),o},checkIfHasNoCompanyDetails=function(e){var t=document.querySelector("#company"),o=document.querySelector("#company-box");return(null===e.company||0===e.company.length?addClassesToElement:("@"==e.company.charAt(0)?(t.textContent="".concat(e.company),t.href="https://github.com/".concat(e.company.substring(1))):(t.textContent="".concat(e.company),t.href="https://github.com/".concat(e.company)),removeClassesFromElement))(t,o),o};function isValidHttpUrl(e){var t;try{t=new URL(e)}catch(e){return!1}return"http:"===t.protocol||"https:"===t.protocol}var checkIfHasNoWebsite=function(e){var t=document.querySelector("#website"),o=document.querySelector("#website-box");return(null===e.blog||0===e.blog.length?(t.href="",addClassesToElement):(e.blog.includes("http")?(t.textContent=e.blog,t.href="".concat(e.blog)):!1===isValidHttpUrl(t.href="http://".concat(e.blog))?(t.textContent=e.blog,t.href="https://".concat(e.blog)):(t.textContent=e.blog,t.href="http://".concat(e.blog)),removeClassesFromElement))(t,o),o},checkIfHasTwitter=function(e){var t=document.querySelector("#twitter"),o=document.querySelector("#twitter-box");return(null===e.twitter_username||0===e.twitter_username.length?addClassesToElement:(t.textContent=e.twitter_username,t.href="http://twitter.com/".concat(e.twitter_username),removeClassesFromElement))(t,o),o},getUserData=function(e){fetch("https://api.github.com/users/".concat(e)).then(function(e){if(console.log(e),e.ok)return e.json();throw new Error(renderError("No results"))}).then(function(e){return renderUser(e)}).catch(function(e){return console.error("No results")})},removeClassesFromElement=function(e,t){e.classList.remove("contact__details--text-decoration"),t.classList.remove("contact__box--transparency")},addClassesToElement=function(e,t){e.textContent="Not available",e.classList.add("contact__details--text-decoration"),t.classList.add("contact__box--transparency")},renderUser=function(e){document.querySelector("#avatar").src=e.avatar_url,checkiIfHasName(e),document.querySelector("#username").textContent="@".concat(e.login),setCorrecJoinedDate(e),checkIfHasBio(e),document.querySelector("#repos").textContent=e.public_repos,document.querySelector("#followers").textContent=e.followers,document.querySelector("#following").textContent=e.following,checkIfHasNoLocation(e),checkIfHasNoCompanyDetails(e),checkIfHasNoWebsite(e),checkIfHasTwitter(e)};document.querySelector("#search-button").addEventListener("click",function(e){var t=document.querySelector("#search-input"),e=(e.preventDefault(),searchErrorMessage.textContent="",t.value.split(" ").join(""));getUserData(e),t.value=""}),document.querySelector("#screen-mode-button").addEventListener("click",function(){changeColorScreenMode()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
